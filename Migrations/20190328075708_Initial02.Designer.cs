// <auto-generated />
using System;
using SURV.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SURV.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190328075708_Initial02")]
    partial class Initial02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("SURV.Models.DB.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<string>("Body");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("SURV.Models.DB.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateTill")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<bool>("NonResident")
                        .HasColumnType("Boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SURV.Models.DB.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SURV.Models.DB.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<string>("Currency");

                    b.Property<int?>("GradeId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<double>("Sum");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("GradeId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("SURV.Models.DB.ErrorMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<string>("Body");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ErrorMessages");
                });

            modelBuilder.Entity("SURV.Models.DB.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SURV.Models.DB.HrMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ApprovePersonId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ApprovePersonId");

                    b.ToTable("HrMonths");
                });

            modelBuilder.Entity("SURV.Models.DB.HrYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ApprovePersonId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ApprovePersonId");

                    b.ToTable("HrYears");
                });

            modelBuilder.Entity("SURV.Models.DB.Person", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateTill")
                        .HasColumnType("DateTime");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("FullName")
                        .HasMaxLength(255);

                    b.Property<int?>("GradeId");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("Boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<int?>("ManagerId");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("TabelNumber")
                        .HasMaxLength(255);

                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255);

                    b.Property<int>("WorkType");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SURV.Models.DB.PersonCompany", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("CompanyId");

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<int>("Id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.HasKey("PersonId", "CompanyId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("PersonCompanies");
                });

            modelBuilder.Entity("SURV.Models.DB.PersonRole", b =>
                {
                    b.Property<int>("PersonId");

                    b.Property<int>("RoleId");

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<int>("Id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.HasKey("PersonId", "RoleId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("PersonRoles");
                });

            modelBuilder.Entity("SURV.Models.DB.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<bool>("Block")
                        .HasColumnType("Boolean");

                    b.Property<int?>("ClientId");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateTill")
                        .HasColumnType("DateTime");

                    b.Property<int?>("DeputyId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<int?>("ManagerId");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("ViewerId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DeputyId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ViewerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SURV.Models.DB.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SURV.Models.DB.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<string>("Comment");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<int>("ServiceTypeId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("UnitId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("SURV.Models.DB.ServiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<int>("ProjectId");

                    b.Property<string>("Result")
                        .IsRequired();

                    b.Property<int>("ServiceId");

                    b.Property<int>("TabelId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TabelId");

                    b.ToTable("ServiceLines");
                });

            modelBuilder.Entity("SURV.Models.DB.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("SURV.Models.DB.Tabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<bool>("Approve")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ApproverId");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("Fill")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("FillDate")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<int>("Month");

                    b.Property<int?>("PersonId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.ToTable("Tabels");
                });

            modelBuilder.Entity("SURV.Models.DB.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SURV.Models.DB.UserCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<int?>("ClientId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("DateTill")
                        .HasColumnType("DateTime");

                    b.Property<int>("DayType");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<int?>("PersonId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PersonId");

                    b.ToTable("UserCalendars");
                });

            modelBuilder.Entity("SURV.Models.DB.WorkDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DateTime");

                    b.Property<int>("DayType");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("WorkDays");
                });

            modelBuilder.Entity("SURV.Models.DB.WssHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<int>("Hours");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("Boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("DateTime");

                    b.Property<int?>("ModifiedById");

                    b.Property<int>("ServiceId");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("WssHours");
                });

            modelBuilder.Entity("SURV.Models.DB.Client", b =>
                {
                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("SURV.Models.DB.Cost", b =>
                {
                    b.HasOne("SURV.Models.DB.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("SURV.Models.DB.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");
                });

            modelBuilder.Entity("SURV.Models.DB.HrMonth", b =>
                {
                    b.HasOne("SURV.Models.DB.Person", "ApprovePerson")
                        .WithMany()
                        .HasForeignKey("ApprovePersonId");
                });

            modelBuilder.Entity("SURV.Models.DB.HrYear", b =>
                {
                    b.HasOne("SURV.Models.DB.Person", "ApprovePerson")
                        .WithMany()
                        .HasForeignKey("ApprovePersonId");
                });

            modelBuilder.Entity("SURV.Models.DB.Person", b =>
                {
                    b.HasOne("SURV.Models.DB.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("SURV.Models.DB.Unit", "Unit")
                        .WithOne("Manager")
                        .HasForeignKey("SURV.Models.DB.Person", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Person", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");
                });

            modelBuilder.Entity("SURV.Models.DB.PersonCompany", b =>
                {
                    b.HasOne("SURV.Models.DB.Person", "Person")
                        .WithMany("PersonCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany("PersonCompanies")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SURV.Models.DB.PersonRole", b =>
                {
                    b.HasOne("SURV.Models.DB.Role", "Role")
                        .WithMany("PersonRoles")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Person", "Person")
                        .WithMany("PersonRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SURV.Models.DB.Project", b =>
                {
                    b.HasOne("SURV.Models.DB.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("SURV.Models.DB.Person", "Deputy")
                        .WithMany()
                        .HasForeignKey("DeputyId");

                    b.HasOne("SURV.Models.DB.Person", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.HasOne("SURV.Models.DB.Person", "Viewer")
                        .WithMany()
                        .HasForeignKey("ViewerId");
                });

            modelBuilder.Entity("SURV.Models.DB.Service", b =>
                {
                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SURV.Models.DB.ServiceLine", b =>
                {
                    b.HasOne("SURV.Models.DB.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SURV.Models.DB.Tabel", "Tabel")
                        .WithMany("Services")
                        .HasForeignKey("TabelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SURV.Models.DB.Tabel", b =>
                {
                    b.HasOne("SURV.Models.DB.Person", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId");

                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("SURV.Models.DB.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("SURV.Models.DB.Unit", b =>
                {
                    b.HasOne("SURV.Models.DB.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("SURV.Models.DB.UserCalendar", b =>
                {
                    b.HasOne("SURV.Models.DB.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("SURV.Models.DB.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("SURV.Models.DB.WssHour", b =>
                {
                    b.HasOne("SURV.Models.DB.ServiceLine", "Service")
                        .WithMany("Hours")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
